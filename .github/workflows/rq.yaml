name: rq
on:
  push:
    branches: [ main ]
    tags:
      - '*'
    paths-ignore:
      - 'charts/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'charts/**'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          default: true
          components: rustfmt

      - name: Check formatting
        run:  | 
            cd rq 
            cargo fmt -- --check
  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Prepare
      id: prep
      run: |
        IS_LATEST=false
        IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
        DOCKER_IMAGE=ghcr.io/${IMAGE_REPOSITORY}
        VERSION=rq-edge
        
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          IS_LATEST=true
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=rq-$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [[ $GITHUB_REF == refs/heads/master ]]; then
            IS_LATEST=true
          fi
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=rq-pr-${{ github.event.number }}
        fi

        TAGS="${DOCKER_IMAGE}:${VERSION}"

        if [ "$IS_LATEST" = true ] ; then
          TAGS="$TAGS,${DOCKER_IMAGE}:rq-latest"
        fi

        if [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:rq-sha-${GITHUB_SHA::8}"
        fi

        PUSH_IMAGE=true
        REPO_FULL_NAME="${{ github.event.pull_request.head.repo.full_name }}"
        # If this is both a pull request and a fork, then don't push the image
        if [[ ${{ github.event_name }} == pull_request ]]; then
          if [[ $REPO_FULL_NAME != ${{ github.repository }} ]]; then
            PUSH_IMAGE=false
          fi
        fi

        echo ::set-output name=version::${VERSION}
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        echo ::set-output name=push_image::$PUSH_IMAGE

    - name: Check out the repo
      uses: actions/checkout@v2
      
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Github Packages
      id: docker-login
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_PAT }}
      if: ${{ steps.prep.outputs.push_image == 'true' }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./rq
        builder: ${{ steps.buildx.outputs.name }}
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        tags: ${{ steps.prep.outputs.tags }}
        push: ${{ steps.prep.outputs.push_image }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

      